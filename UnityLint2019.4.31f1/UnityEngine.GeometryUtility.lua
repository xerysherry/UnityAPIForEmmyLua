--- @class UnityEngine.GeometryUtility Utility class for common geometric functions.
UnityEngine.GeometryUtility = {}

--- Calculates frustum planes.
--- @param camera UnityEngine.Camera The camera with the view frustum that you want to calculate planes from.
--- @return UnityEngine.Plane[] The planes that form the camera's view frustum.
function UnityEngine.GeometryUtility.CalculateFrustumPlanes(camera) end

--- Calculates frustum planes.
--- @param worldToProjectionMatrix UnityEngine.Matrix4x4 A matrix that transforms from world space to projection space, from which the planes will be calculated.
--- @return UnityEngine.Plane[] The planes that enclose the projection space described by the matrix.
function UnityEngine.GeometryUtility.CalculateFrustumPlanes(worldToProjectionMatrix) end

--- Calculates frustum planes.
--- @param camera UnityEngine.Camera The camera with the view frustum that you want to calculate planes from.
--- @param planes UnityEngine.Plane[] An array of 6 Planes that will be overwritten with the calculated plane values.
function UnityEngine.GeometryUtility.CalculateFrustumPlanes(camera, planes) end

--- Calculates frustum planes.
--- @param worldToProjectionMatrix UnityEngine.Matrix4x4 A matrix that transforms from world space to projection space, from which the planes will be calculated.
--- @param planes UnityEngine.Plane[] An array of 6 Planes that will be overwritten with the calculated plane values.
function UnityEngine.GeometryUtility.CalculateFrustumPlanes(worldToProjectionMatrix, planes) end

--- Calculates the bounding box from the given array of positions and the transformation matrix.
--- @param positions UnityEngine.Vector3[] An array that stores the location of 3d positions.
--- @param transform UnityEngine.Matrix4x4 A matrix that changes the position, rotation and size of the bounds calculation.
--- @return UnityEngine.Bounds Calculates the axis-aligned bounding box.
function UnityEngine.GeometryUtility.CalculateBounds(positions, transform) end

--- GeometryUtility.TryCreatePlaneFromPolygon creates a plane from the given list of vertices that define the polygon, as long as they do not characterize a straight line or zero area.
--- @param vertices UnityEngine.Vector3[] An array of vertex positions that define the shape of a polygon.
--- @return boolean Returns true on success, false if Unity did not create a plane from the vertices.
--- @return UnityEngine.Plane& A valid plane that goes through the vertices.
function UnityEngine.GeometryUtility.TryCreatePlaneFromPolygon(vertices) end

--- Returns true if bounds are inside the plane array.
--- @param planes UnityEngine.Plane[] 
--- @param bounds UnityEngine.Bounds 
--- @return boolean 
function UnityEngine.GeometryUtility.TestPlanesAABB(planes, bounds) end

---  Generated By xerysherry