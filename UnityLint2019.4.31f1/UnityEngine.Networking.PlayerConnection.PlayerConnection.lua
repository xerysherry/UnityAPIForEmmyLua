--- @class UnityEngine.Networking.PlayerConnection.PlayerConnection:UnityEngine.ScriptableObject Used for handling the network connection from the Player to the Editor.
--- @field instance UnityEngine.Networking.PlayerConnection.PlayerConnection property get
---       Returns a singleton instance of a PlayerConnection.
--- @field isConnected boolean property get
---       Returns true when the Editor is connected to the Player.
--- @field name string
--- @field hideFlags UnityEngine.HideFlags
UnityEngine.Networking.PlayerConnection.PlayerConnection = {}

function UnityEngine.Networking.PlayerConnection.PlayerConnection:OnEnable() end

--- Registers a listener for a specific message ID, with an Action to be executed whenever that message is received by the Editor.
--- This ID must be the same as for messages sent from EditorConnection.Send().
--- @param messageId System.Guid The message ID that should cause the Action callback to be executed when received.
--- @param callback function Action that is executed when a message with ID messageId is received by the Editor.
---       The callback includes the data that is sent from the Player, and the Player ID.
---       The Player ID is always 1, because only one Editor can be connected.
function UnityEngine.Networking.PlayerConnection.PlayerConnection:Register(messageId, callback) end

--- Deregisters a message listener.
--- @param messageId System.Guid Message ID associated with the callback that you wish to deregister.
--- @param callback function The associated callback function you wish to deregister.
function UnityEngine.Networking.PlayerConnection.PlayerConnection:Unregister(messageId, callback) end

--- Registers a callback that is invoked when the Editor connects to the Player.
--- @param callback function The action that is called when the Player connects to the Editor, with the Player ID of the Editor.
function UnityEngine.Networking.PlayerConnection.PlayerConnection:RegisterConnection(callback) end

--- Registers a callback to be called when Editor disconnects.
--- @param callback function The Action that is called when a Player disconnects from the Editor.
function UnityEngine.Networking.PlayerConnection.PlayerConnection:RegisterDisconnection(callback) end

--- Unregisters the connection callback.
--- @param callback function 
function UnityEngine.Networking.PlayerConnection.PlayerConnection:UnregisterConnection(callback) end

--- Unregisters the disconnection callback.
--- @param callback function 
function UnityEngine.Networking.PlayerConnection.PlayerConnection:UnregisterDisconnection(callback) end

--- Sends data to the Editor.
--- @param messageId System.Guid The type ID of the message that is sent to the Editor.
--- @param data number[] 
function UnityEngine.Networking.PlayerConnection.PlayerConnection:Send(messageId, data) end

--- Attempt to sends data to the Editor.
--- @param messageId System.Guid The type ID of the message that is sent to the Editor.
--- @param data number[] 
--- @return boolean Returns true when the Player sends data successfully, and false when there is no space in the socket ring buffer or sending fails.
function UnityEngine.Networking.PlayerConnection.PlayerConnection:TrySend(messageId, data) end

--- Blocks the calling thread until either a message with the specified messageId is received or the specified time-out elapses.
--- @param messageId System.Guid The type ID of the message that is sent to the Editor.
--- @param timeout number The time-out specified in milliseconds.
--- @return boolean Returns true when the message is received and false if the call timed out.
function UnityEngine.Networking.PlayerConnection.PlayerConnection:BlockUntilRecvMsg(messageId, timeout) end

--- This disconnects all of the active connections.
function UnityEngine.Networking.PlayerConnection.PlayerConnection:DisconnectAll() end

---  Generated By xerysherry