--- @class Unity.Jobs.IJobParallelForExtensions Extension methods for Jobs using the IJobParallelFor.
Unity.Jobs.IJobParallelForExtensions = {}

--- Schedule the job for execution on a worker thread.
--- @param jobData Unity.Jobs.IJobParallelForExtensions.T The job and data to Schedule.
--- @param arrayLength number The number of iterations the for loop will execute.
--- @param innerloopBatchCount number Granularity in which workstealing is performed. A value of 32, means the job queue will steal 32 iterations and then perform them in an efficient inner loop.
--- @param dependsOn Unity.Jobs.JobHandle Dependencies are used to ensure that a job executes on workerthreads after the dependency has completed execution. Making sure that two jobs reading or writing to same data do not run in parallel.
--- @return Unity.Jobs.JobHandle The handle identifying the scheduled job. Can be used as a dependency for a later job or ensure completion on the main thread.
function Unity.Jobs.IJobParallelForExtensions.Schedule(jobData, arrayLength, innerloopBatchCount, dependsOn) end

--- Perform the job's Execute method immediately on the same thread.
--- @param jobData Unity.Jobs.IJobParallelForExtensions.T The job and data to Run.
--- @param arrayLength number The number of iterations the for loop will execute.
function Unity.Jobs.IJobParallelForExtensions.Run(jobData, arrayLength) end

---  Generated By xerysherry