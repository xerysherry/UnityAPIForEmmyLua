--- @class UnityEngine.HashUtilities Utilities to compute hashes.
UnityEngine.HashUtilities = {}

--- Append inHash in outHash.
--- @param inHash UnityEngine.Hash128& Hash to append.
--- @param outHash UnityEngine.Hash128& Hash that will be updated.
function UnityEngine.HashUtilities.AppendHash(inHash, outHash) end

--- Compute a Hash128 of a Matrix4x4.
--- @param value UnityEngine.Matrix4x4& The Matrix4x4 to hash.
--- @param hash UnityEngine.Hash128& The computed hash.
function UnityEngine.HashUtilities.QuantisedMatrixHash(value, hash) end

--- Compute a Hash128 of a Vector3.
--- @param value UnityEngine.Vector3& 
--- @param hash UnityEngine.Hash128& 
function UnityEngine.HashUtilities.QuantisedVectorHash(value, hash) end

--- Compute a 128 bit hash based on a value. the type of the value must be a value type.
--- @param value UnityEngine.T& A reference to the value to hash.
--- @param hash UnityEngine.Hash128& A reference to the Hash128 to updated with the computed hash.
function UnityEngine.HashUtilities.ComputeHash128(value, hash) end

--- Compute a 128 bit hash based on a value. the type of the value must be a value type.
--- @param value number[] A reference to the value to hash.
--- @param hash UnityEngine.Hash128& A reference to the Hash128 to updated with the computed hash.
function UnityEngine.HashUtilities.ComputeHash128(value, hash) end

---  Generated By xerysherry