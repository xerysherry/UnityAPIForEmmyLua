--- @class Unity.IO.LowLevel.Unsafe.ReadHandle You can use this handle to query the status of an asynchronous read operation. Note: To avoid a memory leak, you must call Dispose.
--- @field JobHandle Unity.Jobs.JobHandle property get
---       JobHandle that completes when the read operation completes.
--- @field Status Unity.IO.LowLevel.Unsafe.ReadStatus property get
---       Current state of the read operation.
Unity.IO.LowLevel.Unsafe.ReadHandle = {}

--- Check if the ReadHandle is valid.
--- @return boolean True if the ReadHandle is valid.
function Unity.IO.LowLevel.Unsafe.ReadHandle:IsValid() end

--- Disposes the ReadHandle. Use this to free up internal resources for reuse.
function Unity.IO.LowLevel.Unsafe.ReadHandle:Dispose() end

---  Generated By xerysherry