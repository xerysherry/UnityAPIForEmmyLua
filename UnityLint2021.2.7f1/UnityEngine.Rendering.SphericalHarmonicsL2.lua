--- @class UnityEngine.Rendering.SphericalHarmonicsL2 Spherical harmonics up to the second order (3 bands, 9 coefficients).
--- @field Item number
UnityEngine.Rendering.SphericalHarmonicsL2 = {}

--- Scales SH by a given factor.
--- @param lhs UnityEngine.Rendering.SphericalHarmonicsL2 
--- @param rhs number 
--- @return UnityEngine.Rendering.SphericalHarmonicsL2 
function UnityEngine.Rendering.SphericalHarmonicsL2.op_Multiply(lhs, rhs) end

--- Scales SH by a given factor.
--- @param lhs number 
--- @param rhs UnityEngine.Rendering.SphericalHarmonicsL2 
--- @return UnityEngine.Rendering.SphericalHarmonicsL2 
function UnityEngine.Rendering.SphericalHarmonicsL2.op_Multiply(lhs, rhs) end

--- @param lhs UnityEngine.Rendering.SphericalHarmonicsL2 
--- @param rhs UnityEngine.Rendering.SphericalHarmonicsL2 
--- @return UnityEngine.Rendering.SphericalHarmonicsL2
function UnityEngine.Rendering.SphericalHarmonicsL2.op_Addition(lhs, rhs) end

--- @param lhs UnityEngine.Rendering.SphericalHarmonicsL2 
--- @param rhs UnityEngine.Rendering.SphericalHarmonicsL2 
--- @return boolean
function UnityEngine.Rendering.SphericalHarmonicsL2.op_Equality(lhs, rhs) end

--- @param lhs UnityEngine.Rendering.SphericalHarmonicsL2 
--- @param rhs UnityEngine.Rendering.SphericalHarmonicsL2 
--- @return boolean
function UnityEngine.Rendering.SphericalHarmonicsL2.op_Inequality(lhs, rhs) end

--- Clears SH probe to zero.
function UnityEngine.Rendering.SphericalHarmonicsL2:Clear() end

--- Add ambient lighting to probe data.
--- @param color UnityEngine.Color 
function UnityEngine.Rendering.SphericalHarmonicsL2:AddAmbientLight(color) end

--- Add directional light to probe data.
--- @param direction UnityEngine.Vector3 
--- @param color UnityEngine.Color 
--- @param intensity number 
function UnityEngine.Rendering.SphericalHarmonicsL2:AddDirectionalLight(direction, color, intensity) end

--- Evaluates the Spherical Harmonics for each of the given directions. The result from the first direction is written into the first element of results, the result from the second direction is written into the second element of results, and so on. The array size of directions and results must match and directions must be normalized.
--- @param directions UnityEngine.Vector3[] Normalized directions for which the spherical harmonics are to be evaluated.
--- @param results UnityEngine.Color[] Output array for the evaluated values of the corresponding directions.
function UnityEngine.Rendering.SphericalHarmonicsL2:Evaluate(directions, results) end

--- @param rgb number 
--- @param coefficient number 
--- @param value number 
function UnityEngine.Rendering.SphericalHarmonicsL2:set_Item(rgb, coefficient, value) end

--- @return number
function UnityEngine.Rendering.SphericalHarmonicsL2:GetHashCode() end

--- @param other System.Object 
--- @return boolean
function UnityEngine.Rendering.SphericalHarmonicsL2:Equals(other) end

--- @param other UnityEngine.Rendering.SphericalHarmonicsL2 
--- @return boolean
function UnityEngine.Rendering.SphericalHarmonicsL2:Equals(other) end

---  Generated By xerysherry